% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TR_fit.R
\name{TR_normal}
\alias{TR_normal}
\title{Tensor-on-Tensor Regression with Kronecker Separable Covariance and Tensor Ring Format Coefficient}
\usage{
TR_normal(
  Yall,
  Xall,
  g,
  it = 100,
  init = NULL,
  err = 1e-07,
  corrs = "N",
  arma_param = NULL
)
}
\arguments{
\item{Yall}{Array containing the n tensor responses along the last mode, so that it is of size m_1 x .. x m_p x n.
The last dimension must match the last dimension of Xall.}

\item{Xall}{Array containing the n tensor covariates along the last mode, so that it is of size h_1 x .. x h_l x n.
The last dimension must match the last dimension of Yall.}

\item{g}{vector of size p+l containing the Tensor Ring rank}

\item{it}{maximum number of iterations.}

\item{init}{list containing initial values. init$covssig2 contains the initial value of \\sigma^2, init$covs$covs is a list of p matrices
containing initial values for S_1 ,.., S_p, init$TK$Ls is a list of l matrices containing the initial values for L_1 ,..,L_l, and
init$TK$Ms is a list of p matrices containing the initial values for M_1 ,..,M_p.
If init = NULL then the elements in init$covs will be initiated from the TVN model fitted on the unconstrained B residuals
and init$Ls, init$Ms will contain elements generated randomly from the uniform(0,1) distribution.}

\item{err}{relative error used to assess convergence.}

\item{corrs}{Character vector of size p inidicating the types of covariance matrices desired for S_1 ,.., S_p.
Options are "AR(1)", "MA(1)", "ARMA"/"ARMA(p,q)"/"ARMA(p, q)", "EQC"  for
AR(1), MA(1), ARMA(p, q) and equivariance correlation matrices, and
"N" for general covariance with element (1,1) equal to 1.
If corrs is of size 1, then S_1 ,.., S_p will all have the same correlation structure.}

\item{arma_param}{A list of size length(dim(Yall)), each of which contains the
ARMA parameter orders (p, q) for that corresponding mode.
p is the AR parameter order and q is the MA parameter order
If some other mode has some other kind of correlation structure
and you still want to specify the ARMA orders,
you can input a list of size p with otheer cases as NULL.
The default ARMA order is (1, 1).}
}
\value{
A list containing the following elements: \cr\cr
B -  the estimated coefficient B. \cr\cr
TR - A list containing the estimated L_1 ,.., L_l in the list Ls and
the estimated M_1 ,.., M_p in the list Ms.\cr\cr
sig2 - the estimate of \\sigma^2. \cr\cr
covs - a list with the estimated matrices S_1 ,.., S_p. \cr\cr
allconv - a vector with all the convergence criteria. \cr\cr
allik - a vector with all the loglikelihoods, should be monotone increasing. \cr\cr
it - the number of iterations taken \cr\cr
}
\description{
Tensor-on-tensor regression
 Y_i = < X_i | B > + E_i\cr
with kronecker-separable covariance
Var(vec(E_i)) = \\sigma^2 \\otimes_k S_k
and Tensor-Ring formatted
B = \\tr( L_1 \\times^1 .. \\times^1 L_l \\times^1 M_1 \\times^1 .. \\times^1 M_p ).\cr
The size of the ith tensor covariate X_i is h_1 x .. x h_l,
The size of the ith tensor response Y_i is m_1 x .. x m_p,
the size of the regression coefficient B is of size h_1 x .. x h_l x m_1 x .. x m_p,
and i=1,...,n.\cr
The TR rank (g) is (s_1 ,.., s_l,g_1 ,..,g_p), where s_0 = g_p and g_0 = s_l,\cr
the tensor L_k is of size s_k-1 x h_k x s_k  ,
the tensor M_k is of size g_k-1 x m_k x g_k,
and matrix S_k is positive definite of size m_k x m_k and is restricted to (1,1) element equal to 1.
}
\details{
Convergence is achieved when the relative difference in snorm(B) + snorm(S) is less than err.
snorm(Y) here means norm(Y)/\\sqrt(size of Y)
}
\examples{
# Tensor-on-Tensor Regression on 6x7x8x9 responses and 3x4x5 covariates
set.seed(1234)
RmsT <- 6:9
RhsT <- 3:5
Rbt <- 100
Rnn <- 2
Rcorrs = c("AR(1)","EQC","ARMA","N")
Rsig2t <- 20
dat <- diagdat_sim(msT=RmsT,hsT=RhsT,bt=Rbt,nn=Rnn,sig2t=Rsig2t,corrs=Rcorrs)
g <- c(2,2,2,2,2,2,2)
fit <- TR_normal(Yall = dat$Yall,Xall = dat$Xall, g = g,corrs = Rcorrs,it=30)
par(mfrow = c(1,2))
hist(fit$B,main = "estimates in B (true in blue)")
abline(v= Rbt,col = "blue",lwd=3)
plot(ts(fit$allik),main = "loglikelihood")
par(mfrow = c(1,1))
covars <- rbind("true" = c(Rsig2t,sapply(dat$SST,function(x)x[2,1])),
                "est" = c(fit$sig2,sapply(fit$covs,function(x)x[2,1])))
colnames(covars) <- c("sig2",paste0("S-",Rcorrs))
covars
}
\references{
\url{https://arxiv.org/abs/2012.10249}
}
\author{
Carlos Llosa-Vite, \email{llosacarlos2@gmail.com}
}
